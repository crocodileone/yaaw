(function($){$.extend({jsonRPC:{version:"2.0",endPoint:null,namespace:null,setup:function(params){this._validateConfigParams(params);this.endPoint=params.endPoint;this.namespace=params.namespace;this.auth=this.endPoint.match(/^(?:(?![^:@]+:[^:@\/]*@)[^:\/?#.]+:)?(?:\/\/)?(?:([^:@]*(?::[^:@]*)?)?@)?/)[1];return this},withOptions:function(params,callback){this._validateConfigParams(params);if(typeof(callback)==="undefined"){throw ("No callback specified")}origParams={endPoint:this.endPoint,namespace:this.namespace};this.setup(params);callback.call(this);this.setup(origParams)},request:function(method,options){if(typeof(options)==="undefined"){options={id:1}}if(typeof(options.id)==="undefined"){options.id=1}this._validateRequestMethod(method);this._validateRequestParams(options.params);this._validateRequestCallbacks(options.success,options.error);this._doRequest(JSON.stringify(this._requestDataObj(method,options.params,options.id)),options);return true},batchRequest:function(requests,options){if(typeof(options)==="undefined"){options={}}if(!$.isArray(requests)||requests.length===0){throw ("Invalid requests supplied for jsonRPC batchRequest. Must be an array object that contain at least a method attribute")}var _that=this;$.each(requests,function(i,req){_that._validateRequestMethod(req.method);_that._validateRequestParams(req.params);if(typeof(req.id)==="undefined"){req.id=i+1}});this._validateRequestCallbacks(options.success,options.error);var data=[],request;for(var i=0;i<requests.length;i++){request=requests[i];data.push(this._requestDataObj(request.method,request.params,request.id))}this._doRequest(JSON.stringify(data),options)},_validateConfigParams:function(params){if(typeof(params)==="undefined"){throw ("No params specified")}else{if(params.endPoint&&typeof(params.endPoint)!=="string"){throw ("endPoint must be a string")}if(params.namespace&&typeof(params.namespace)!=="string"){throw ("namespace must be a string")}}},_validateRequestMethod:function(method){if(typeof(method)!=="string"){throw ("Invalid method supplied for jsonRPC request")}return true},_validateRequestParams:function(params){if(!(params===null||typeof(params)==="undefined"||typeof(params)==="object"||$.isArray(params))){throw ("Invalid params supplied for jsonRPC request. It must be empty, an object or an array.")}return true},_validateRequestCallbacks:function(success,error){if(typeof(success)!=="undefined"&&typeof(success)!=="function"){throw ("Invalid success callback supplied for jsonRPC request")}if(typeof(error)!=="undefined"&&typeof(error)!=="function"){throw ("Invalid error callback supplied for jsonRPC request")}return true},_doRequest:function(data,options){var _that=this;$.ajax({type:"POST",async:false!==options.async,dataType:"json",url:this._requestUrl(options.url),data:data,cache:false,processData:false,beforeSend:function(xhr){var authority=_that._requestAuth(options.url);if(authority){xhr.setRequestHeader("Authorization","Basic "+$.base64.encode(authority))}},error:function(json){_that._requestError.call(_that,json,options.error)},success:function(json){_that._requestSuccess.call(_that,json,options.success,options.error)}})},_requestUrl:function(url){url=url||this.endPoint;return url+"?tm="+new Date().getTime()},_requestAuth:function(url){return url?url.match(/^(?:(?![^:@]+:[^:@\/]*@)[^:\/?#.]+:)?(?:\/\/)?(?:([^:@]*(?::[^:@]*)?)?@)?/)[1]:this.auth},_requestDataObj:function(method,params,id){var dataObj={jsonrpc:this.version,method:this.namespace?this.namespace+"."+method:method,id:id};if(typeof(params)!=="undefined"){dataObj.params=params}return dataObj},_requestError:function(json,error){if(typeof(error)!=="undefined"&&typeof(error)==="function"){error(this._response(json.responseText))}},_requestSuccess:function(json,success,error){var response=this._response(json);if(response.error&&typeof(error)==="function"){error(response);return}if(typeof(success)==="function"){success(response)}},_response:function(json){if(typeof(json)==="undefined"||json===""){return{error:"Internal server error",version:"2.0"}}else{try{if(typeof(json)==="string"){json=eval("("+json+")")}if(($.isArray(json)&&json.length>0&&json[0].jsonrpc!=="2.0")||(!$.isArray(json)&&json.jsonrpc!=="2.0")){throw"Version error"}return json}catch(e){return{error:"Internal server error: "+e,version:"2.0"}}}}}})})(jQuery);